{"version":3,"sources":["TodoItem.js","Controller.js","App.js","index.js"],"names":["TodoItem","props","el","useState","todo","setTodo","description","setDescription","name","type","value","onChange","e","target","onClick","todoUpdate","_id","todoDelete","Controller","newTodo","setNewTodo","newDescription","setNewDescription","className","addNewTodo","App","list","setList","todoId","newName","a","axios","patch","then","result","catch","err","console","log","get","data","delete","done","post","useEffect","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RA6BeA,MAzBf,SAAkBC,GAAQ,IAEfC,EAAMD,EAANC,GAFc,EAIGC,mBAAS,IAJZ,mBAIdC,EAJc,KAIRC,EAJQ,OAKiBF,mBAAS,IAL1B,mBAKdG,EALc,KAKDC,EALC,KAOrB,OACI,4BACKL,EAAGM,KACHN,EAAGI,YAEJ,2BAAOG,KAAK,OAAOC,MAAON,EAAMO,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOH,UAElE,2BAAOD,KAAK,OAAOC,MAAOJ,EAAaK,SAAU,SAACC,GAAD,OAAOL,EAAeK,EAAEC,OAAOH,UAEhF,4BAAQI,QAAS,kBAAMb,EAAMc,WAAYb,EAAGc,IAAKZ,EAAME,KAAvD,UAEA,4BAAQQ,QAAS,kBAAMb,EAAMgB,WAAYf,EAAGc,OAA5C,YCGGE,MArBf,SAAoBjB,GAAQ,IAAD,EAEME,mBAAS,IAFf,mBAEjBgB,EAFiB,KAERC,EAFQ,OAGoBjB,mBAAS,IAH7B,mBAGjBkB,EAHiB,KAGDC,EAHC,KAKvB,OACG,yBAAKC,UAAU,iBACX,yCACA,2BAAOd,KAAK,OAAOC,MAAOS,EAASR,SAAU,SAACC,GAAD,OAAOQ,EAAWR,EAAEC,OAAOH,UAExE,gDACA,2BAAOD,KAAK,OAAOC,MAAOW,EAAgBV,SAAU,SAACC,GAAD,OAAOU,EAAkBV,EAAEC,OAAOH,UAEtF,4BAAQI,QAAS,kBAAMb,EAAMuB,WAAWL,EAASE,KAAjD,gBACA,6BACA,+BC+DII,MA5Ef,WAAgB,IAAD,EAEatB,mBAAS,IAFtB,mBAEJuB,EAFI,KAEEC,EAFF,KAILZ,EAAU,uCAAG,WAAOa,EAAQC,EAASvB,GAAxB,SAAAwB,EAAA,sEAETC,IAAMC,MAAN,qCAA0CJ,GAAU,CAACpB,KAAMqB,EAASvB,gBACrE2B,MAAK,SAACC,OAENC,OAAM,SAAAC,GAEH,OADAC,QAAQC,IAAI,iBAAkBF,GACvBA,KAPA,uBAUTL,IAAMQ,IAAI,8BACXN,MAAK,SAACC,GACHP,EAAQO,EAAOM,SAElBL,OAAM,SAAAC,GAAG,OAAIA,KAdH,2CAAH,0DAkBVnB,EAAU,uCAAG,WAAOW,GAAP,SAAAE,EAAA,sEAETC,IAAMU,OAAN,qCAA2Cb,IAC5CK,MAAK,SAACC,OAENC,OAAM,SAAAC,GAEH,OADAC,QAAQC,IAAI,iBAAkBF,GACvBA,KAPA,uBAUTL,IAAMQ,IAAI,8BACXN,MAAK,SAACC,GACHP,EAAQO,EAAOM,SAElBL,OAAM,SAAAC,GAAG,OAAIA,KAdH,2CAAH,sDAkBVZ,EAAU,uCAAG,WAAOhB,EAAMF,EAAaoC,GAA1B,SAAAZ,EAAA,sEAETC,IAAMY,KAAN,6BAAyC,CAACnC,OAAMF,cAAaoC,SAC9DT,MAAK,SAACC,OAENC,OAAM,SAAAC,GAEH,OADAC,QAAQC,IAAI,iBAAkBF,GACvBA,KAPA,uBAUTL,IAAMQ,IAAI,8BACXN,MAAK,SAACC,GACHP,EAAQO,EAAOM,SAElBL,OAAM,SAAAC,GAAG,OAAIA,KAdH,2CAAH,0DA4BhB,OAVAQ,qBAAU,WAENb,IAAMQ,IAAI,8BACLN,MAAK,SAACC,GACHP,EAAQO,EAAOM,SAElBL,OAAM,SAAAC,GAAG,OAAIA,OAEnB,IAGC,6BACI,kBAAC,EAAD,CAAYZ,WAAYA,IACvBE,EAAKmB,KAAI,SAAA3C,GAAE,OAAI,kBAAC,EAAD,CAAUA,GAAIA,EAAIa,WAAYA,EAAYE,WAAYA,SCvElF6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.59ee5b20.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n\nfunction TodoItem(props) {\n\n    const {el} = props;\n\n    const [todo, setTodo] = useState('');\n    const [description, setDescription] = useState('');\n\n    return (\n        <li>\n            {el.name}\n            {el.description}\n\n            <input type=\"text\" value={todo} onChange={(e) => setTodo(e.target.value)}/>\n\n            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\n\n            <button onClick={() => props.todoUpdate( el._id, todo, description )}>update</button>\n\n            <button onClick={() => props.todoDelete( el._id )}>DELETE</button>\n\n\n        </li>\n    );\n}\n\nexport default TodoItem;\n","import React, {useState} from 'react';\nimport './App.css';\n\n\nfunction Controller(props) {\n\n   const [newTodo, setNewTodo] = useState('')\n   const [newDescription, setNewDescription] = useState('')\n\n    return (\n       <div className='border-bottom'>\n           <label>name: </label>\n           <input type=\"text\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)}/>\n\n           <label>description: </label>\n           <input type=\"text\" value={newDescription} onChange={(e) => setNewDescription(e.target.value)}/>\n\n           <button onClick={() => props.addNewTodo(newTodo, newDescription)}>Add new todo</button>\n           <br/>\n           <br/>\n\n       </div>\n    );\n}\n\nexport default Controller;\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport TodoItem from \"./TodoItem\";\nimport Controller from \"./Controller\";\n\nfunction App() {\n\n    const [list, setList] = useState([]);\n\n    const todoUpdate = async (todoId, newName, description) => {\n\n        await axios.patch(`http://localhost:5000/todo/${todoId}`, {name: newName, description})\n            .then((result) => {\n            })\n            .catch(err => {\n                console.log('-----ERRRO----', err)\n                return err\n            })\n\n        await axios.get('http://localhost:5000/todo')\n            .then((result) => {\n                setList(result.data)\n            })\n            .catch(err => err)\n\n    }\n\n    const todoDelete = async (todoId) => {\n\n        await axios.delete(`http://localhost:5000/todo/${todoId}`)\n            .then((result) => {\n            })\n            .catch(err => {\n                console.log('-----ERRRO----', err)\n                return err\n            })\n\n        await axios.get('http://localhost:5000/todo')\n            .then((result) => {\n                setList(result.data)\n            })\n            .catch(err => err)\n\n    }\n\n    const addNewTodo = async (name, description, done) => {\n\n        await axios.post(`http://localhost:5000/todo`, {name, description, done})\n            .then((result) => {\n            })\n            .catch(err => {\n                console.log('-----ERRRO----', err)\n                return err\n            })\n\n        await axios.get('http://localhost:5000/todo')\n            .then((result) => {\n                setList(result.data)\n            })\n            .catch(err => err)\n\n    }\n\n    useEffect(() => {\n\n        axios.get('http://localhost:5000/todo')\n            .then((result) => {\n                setList(result.data)\n            })\n            .catch(err => err)\n\n    }, [])\n\n    return (\n        <div>\n            <Controller addNewTodo={addNewTodo}/>\n            {list.map(el => <TodoItem el={el} todoUpdate={todoUpdate} todoDelete={todoDelete}/>)}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}